{"version":3,"sources":["component/Layout/styles.tsx","constant.ts","component/header/styles.tsx","component/header/index.tsx","component/footer/styles.tsx","component/footer/index.tsx","component/Layout/index.tsx","view/main/styles.tsx","view/main/index.tsx","App.tsx","serviceWorker.ts","component/global-style/index.tsx","index.tsx"],"names":["Layout","styled","div","Content","THEME","FONT_COLOR","Header","header","HeaderContainer","Footer","footer","Container","NickName","a","NickNameContainer","href","children","Main","TopArea","TopBackgroudPurpleArea","LogoCat","img","GameJamLogo","InnerBox","props","w","h","t","l","SloganContainer","Slogan","ContentContainer","FlexContainer","ContentBoxContainer","ContentBox","color","ContentMessageContainer","ContentMessageTitle","ContentMessageDescription","JoinButton","src","App","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78a2c4de.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","export const BREAKPOINT = 640;\r\n\r\nexport const THEME = {\r\n  topDark: \"#190013\",\r\n  topPurple: \"#240419\",\r\n  topCircle: \"#3c0f23\",\r\n  body: \"#cfa076\",\r\n  bottom: \"#d7ad7d\",\r\n  theme: \"#a61a1d\",\r\n  personnel: \"#a01828\",\r\n};\r\n\r\nexport const FONT_COLOR = {\r\n  date: \"#e46a4a\",\r\n  place: \"#d04232\",\r\n  theme: \"#a61a1d\",\r\n  personnel: \"#a01828\",\r\n  shadow: \"#926d53\",\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { BREAKPOINT, THEME } from \"../../constant\";\r\n\r\nexport const Header = styled.header`\r\n  width: 100%;\r\n  height: 4rem;\r\n  background-color: ${THEME.topDark};\r\n  color: white;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <S.Header>\r\n      <S.HeaderContainer></S.HeaderContainer>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { BREAKPOINT, THEME } from \"../../constant\";\r\n\r\nexport const Footer = styled.footer`\r\n  width: 100%;\r\n  height: 4rem;\r\n  background-color: ${THEME.bottom};\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 1.5rem;\r\n  color: ${THEME.topDark};\r\n`;\r\n\r\nexport const NickName = styled.a`\r\n  text-decoration: none;\r\n  color: ${THEME.topDark};\r\n  cursor: pointer;\r\n  margin-left: 0.5rem;\r\n  margin-right: 0.5rem;\r\n`\r\n\r\nexport const NickNameContainer = styled.div``;","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <S.Footer>\r\n      <S.Container>\r\n        <S.NickNameContainer>\r\n          <S.NickName href=\"https://github.com/riverandeye\">riverandeye</S.NickName> | <S.NickName href=\"https://github.com/r-4bb1t\">r-4bb1t</S.NickName>\r\n        </S.NickNameContainer>\r\n      </S.Container>\r\n    </S.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\n\r\ninterface LayoutProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      <S.Content>{children}</S.Content>\r\n      <Footer />\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME,BREAKPOINT } from \"../../constant\";\r\n\r\nexport const Main = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  background-color: ${THEME.bottom};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TopArea = styled.div`\r\n  z-index: 100;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${THEME.topDark};\r\n\r\n  border-bottom-left-radius: 5rem;\r\n  border-bottom-right-radius: 5rem;\r\n  color: white;\r\n\r\n  padding-bottom: 4.5rem;\r\n`;\r\n\r\nexport const TopBackgroudPurpleArea = styled.div`\r\n  width: 85%;\r\n  height: 10rem;\r\n  background-color: ${THEME.topPurple};\r\n\r\n  border-radius: 5rem;\r\n`;\r\n\r\nexport const LogoCat = styled.img`\r\n  width: 10rem;\r\n\r\n  margin-top: -8.2rem;\r\n`;\r\n\r\nexport const GameJamLogo = styled.img`\r\n  position: absolute;\r\n\r\n  top: 12rem;\r\n  width: 25rem;\r\n\r\n  border-radius: 0.5rem;\r\n  border: 0.5rem solid ${THEME.topDark};\r\n`;\r\n\r\ninterface CircleProps {\r\n  w: number;\r\n  h: number;\r\n  t: number;\r\n  l: number;\r\n}\r\n\r\nexport const Circle = styled.div<CircleProps>`\r\n  z-index: 200;\r\n\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  background-color: ${THEME.topCircle};\r\n\r\n  width: ${(props) => `${props.w}rem`};\r\n  height: ${(props) => `${props.h}rem`};\r\n  top: ${(props) => `${props.t}rem`};\r\n  left: ${(props) => `${props.l}rem`};\r\n`;\r\n\r\nexport const InnerBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 4rem;\r\n`;\r\n\r\nexport const SloganContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\nmargin-bottom: 2rem;\r\n`;\r\n\r\nexport const Slogan = styled.div`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    justify-content: space-around;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\ninterface ContentBoxProps {\r\n  color?: string;\r\n}\r\n\r\nexport const FlexContainer = styled.div`\r\n  width: 25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  margin: 1rem;\r\n  border-radius: 3rem;\r\n  background-color: ${THEME.body};\r\n  \r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    font-size: 1.5rem;\r\n    height: 17rem;\r\n  }\r\n`\r\n\r\nexport const ContentBoxContainer = styled.div`\r\n  width: 5rem;\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    width: 6rem;\r\n  }\r\n`;\r\n\r\nexport const ContentBox = styled.div<ContentBoxProps>`\r\n  font-size: 1.5rem;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.9rem;\r\n\r\n  background-color: black;\r\n  color: ${(props) => (props.color ? props.color : \"white\")};\r\n  \r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const ContentMessageContainer = styled.div`\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ContentMessageTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 1.3rem;\r\n  \r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const ContentMessageDescription = styled.div`\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  \r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const JoinButton = styled.a`\r\n  background-color: #c4201f;\r\n  border-radius: 20rem;\r\n  border: 6px solid ${THEME.topDark};\r\n  font-size: 3rem;\r\n  text-decoration: none;\r\n  letter-spacing: 0.3rem;\r\n  transition: all 0.2s ease;\r\n  padding: 2rem;\r\n  outline: none;\r\n  color: ${THEME.topDark};\r\n  box-shadow: 0 -3rem 0 1rem #a01928 inset;\r\n  margin-top: 3rem;\r\n  margin-bottom: 3rem;\r\n  &:hover {\r\n    opacity: 0.7;\r\n    transform: scale(0.9);\r\n  }\r\n  @media screen and (min-width: ${BREAKPOINT}px) {\r\n    margin-top: 8rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { FONT_COLOR } from \"../../constant\";\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <S.Main>\r\n      <S.Container>\r\n        <S.TopArea>\r\n          <S.TopBackgroudPurpleArea></S.TopBackgroudPurpleArea>\r\n          <S.LogoCat src=\"https://user-images.githubusercontent.com/52532871/95823660-f732e600-0d68-11eb-9554-b7ebdfd72c12.png\" />\r\n          <S.GameJamLogo src=\"https://user-images.githubusercontent.com/52532871/95824263-f77fb100-0d69-11eb-9051-ab6d7ee1ea2f.jpg\"></S.GameJamLogo>\r\n        </S.TopArea>\r\n        <S.InnerBox>\r\n          <S.SloganContainer>\r\n            <S.Slogan>실력 무관, 개발도구 무관!</S.Slogan>\r\n          </S.SloganContainer>\r\n          <S.ContentContainer>\r\n            <S.FlexContainer>\r\n              <S.ContentBoxContainer>\r\n                <S.ContentBox color={FONT_COLOR.date}>일시</S.ContentBox>\r\n              </S.ContentBoxContainer>\r\n              <S.ContentMessageContainer>\r\n                <S.ContentMessageTitle>\r\n                  2020.11.06(금) 18:00<br/>~  2020.11.07(토) 09:00\r\n                </S.ContentMessageTitle>\r\n                <S.ContentMessageDescription>\r\n                  ※ 공식 행사 시간은 상기와 같지만, 부분적으로 참여하셔도 무관합니다.\r\n                </S.ContentMessageDescription>\r\n              </S.ContentMessageContainer>\r\n            </S.FlexContainer>\r\n            <S.FlexContainer>\r\n              <S.ContentBoxContainer>\r\n                <S.ContentBox color={FONT_COLOR.place}>장소</S.ContentBox>\r\n              </S.ContentBoxContainer>\r\n              <S.ContentMessageContainer>\r\n                <S.ContentMessageTitle>\r\n                안암 캐치카페 및 동아리방 (예정)\r\n                </S.ContentMessageTitle>\r\n              </S.ContentMessageContainer>\r\n            </S.FlexContainer>\r\n            <S.FlexContainer>\r\n              <S.ContentBoxContainer>\r\n                <S.ContentBox color={FONT_COLOR.theme}>주제</S.ContentBox>\r\n              </S.ContentBoxContainer>\r\n              <S.ContentMessageContainer>\r\n                <S.ContentMessageTitle>함께</S.ContentMessageTitle>\r\n              </S.ContentMessageContainer>\r\n            </S.FlexContainer>\r\n            <S.FlexContainer>\r\n              <S.ContentBoxContainer>\r\n                <S.ContentBox color={FONT_COLOR.personnel}>인원</S.ContentBox>\r\n              </S.ContentBoxContainer>\r\n              <S.ContentMessageContainer>\r\n                <S.ContentMessageTitle>\r\n                  개인 혹은 3인 이하 팀\r\n                </S.ContentMessageTitle>\r\n              </S.ContentMessageContainer>\r\n            </S.FlexContainer>\r\n          </S.ContentContainer>\r\n          <S.JoinButton href=\"https://forms.gle/9KpXESRkgDEsta9B7\">참가 신청</S.JoinButton>\r\n        </S.InnerBox>\r\n      </S.Container>\r\n    </S.Main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"./component/Layout\";\r\nimport Main from \"./view/main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Main />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @font-face { font-family: 'BMEULJIRO'; src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_twelve@1.0/BMEULJIRO.woff') format('woff'); font-weight: normal; font-style: normal; }\r\n  * {\r\n    font-family: \"BMEULJIRO\", \"sans-serif\";\r\n    font-display:'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n    margin : 0;\r\n  }\r\n  \r\n  body {\r\n    user-select : none;\r\n    background-color: #f6f9fc;\r\n    margin : 0;\r\n    height: 100vh;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport GlobalStyle from \"./component/global-style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}